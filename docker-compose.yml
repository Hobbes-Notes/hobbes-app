version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./frontend/.env
    environment:
      - REACT_APP_API_URL=http://localhost:8888
      - WDS_SOCKET_PORT=0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    stdin_open: true
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8888:8888"
    volumes:
      - ./backend/src:/code
    env_file:
      - .env
      - ./backend/.env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CORS_ORIGIN=http://localhost:3000
      - DYNAMODB_ENDPOINT=http://dynamodb-local:7777
      - S3_ENDPOINT=http://localstack:4566
      - SQS_ENDPOINT=http://localstack:4566
      - AI_FILES_S3_BUCKET=ai-files
      - AI_FILES_QUEUE_NAME=ai-files
    depends_on:
      - dynamodb-local
      - localstack

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    command: "-jar DynamoDBLocal.jar -sharedDb -port 7777 -dbPath /home/dynamodblocal/data"
    ports:
      - "7777:7777"
    volumes:
      - ./.dynamodb:/home/dynamodblocal/data
    user: root

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - HOSTNAME_EXTERNAL=localstack
      - DEBUG=1
    volumes:
      - ./localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  frontend_node_modules: 