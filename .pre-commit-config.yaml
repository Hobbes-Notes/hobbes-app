# Pre-commit hooks configuration
# Install with: pre-commit install

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      # Linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        files: ^backend/src/
      # Formatter  
      - id: ruff-format
        files: ^backend/src/

  # MyPy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^backend/src/
        args: [--config-file=backend/mypy.ini]
        additional_dependencies: [types-all]
        pass_filenames: false
        entry: bash -c 'cd backend && mypy'

  # Import Linter - Architecture boundary enforcement
  - repo: local
    hooks:
      - id: import-linter
        name: import-linter
        entry: bash -c 'cd backend && python -m importlinter'
        language: system
        files: ^backend/src/
        pass_filenames: false

  # Pytest - Run startup tests
  - repo: local
    hooks:
      - id: startup-tests
        name: startup-tests
        entry: bash -c 'cd backend && python -m pytest src/tests/test_startup.py -v'
        language: system
        files: ^backend/src/
        pass_filenames: false

  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'backend/src/', '-f', 'json', '-o', 'bandit-report.json']
        files: ^backend/src/

# Global configuration
default_stages: [commit]
fail_fast: false

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false 