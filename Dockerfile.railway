# Multi-stage build for Railway deployment
FROM node:18-alpine AS frontend-build

# Increase memory limit for npm
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./

# Use npm ci with optimizations for Railway
RUN npm ci --only=production --no-audit --no-fund --prefer-offline

COPY frontend/ ./
RUN npm run build

# Python backend stage
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements-railway.txt ./
RUN pip install --no-cache-dir -r requirements-railway.txt

# Copy backend source
COPY backend/src ./src

# Copy built frontend from previous stage
COPY --from=frontend-build /app/frontend/build ./frontend/build

# Create startup script
COPY start-railway.sh ./
RUN chmod +x start-railway.sh

# Expose port
EXPOSE 8888

# Start application
CMD ["./start-railway.sh"] 